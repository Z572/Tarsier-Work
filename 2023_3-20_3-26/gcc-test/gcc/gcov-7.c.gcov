        -:    0:Source:/home/openeuler/rpmbuild/BUILD/gcc-10.3.0/gcc/testsuite/gcc.misc-tests/gcov-7.c
        -:    0:Graph:gcov-7.gcno
        -:    0:Data:gcov-7.gcda
        -:    0:Runs:1
        -:    1:/* Check that gcov correctly reports line counts, branch percentages,
        -:    2: * and call return percentages for functions that call longjmp. */
        -:    3:
        -:    4:/* { dg-options "-fprofile-arcs -ftest-coverage" } */
        -:    5:/* { dg-do run { target native } } */
        -:    6:
        -:    7:#include <setjmp.h>
        -:    8:
        -:    9:extern void abort (void);
        -:   10:extern void exit (int);
        -:   11:
        -:   12:jmp_buf env;
        -:   13:int val;
        -:   14:int longjmp_taken;
        -:   15:int bar_enter, bar_exit;
        -:   16:int foo_enter, foo_exit;
        -:   17:
function bar called 3 returned 67% blocks executed 100%
        3:   18:void bar (int i)
        -:   19:{
        3:   20:  bar_enter++;				/* count(3) */
        -:   21:					/* branch(67) */
        3:   22:  if (i == 0) {
branch  0 taken 33% (fallthrough)
branch  1 taken 67%
        -:   23:    					/* branch(end) */
        1:   24:      longjmp_taken++;			/* count(1) */
        1:   25:      longjmp (env, 1);
call    0 returned 0%
        -:   26:    }
        2:   27:  val += i+1;
        2:   28:  bar_exit++;				/* count(2) */
        2:   29:}
        -:   30:
function foo called 3 returned 33% blocks executed 100%
        3:   31:void foo (int i)
        -:   32:{
        3:   33:  foo_enter++;				/* count(3) */
        -:   34:					/* branch(67) */
        3:   35:  if (i == 1) {
branch  0 taken 33% (fallthrough)
branch  1 taken 67%
        -:   36:					/* branch(end) */
        1:   37:      longjmp_taken++;			/* count(1) */
        1:   38:      longjmp (env, 2);
call    0 returned 0%
        -:   39:    }
        -:   40:					/* returns(50) */
        2:   41:  bar (i);				/* count(2) */
call    0 returned 50%
        -:   42:					/* returns(100) */
        1:   43:  bar (7);				/* count(1) */
call    0 returned 100%
        -:   44:					/* returns(end) */
        1:   45:  val += 16;
        1:   46:  foo_exit++;				/* count(1) */
        1:   47:}
        -:   48:
        -:   49:int
function passed called 1 returned 100% blocks executed 90%
        1:   50:passed ()
        -:   51:{
        2:   52:  return (val == 31 &&
        1:   53:          longjmp_taken == 2 &&
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   54:	  foo_enter == 3 &&
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   55:	  foo_exit == 1 &&
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
       3*:   56:	  bar_enter == 3 &&
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
        1:   57:	  bar_exit == 2);
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:   58:	
        -:   59:}
        -:   60:
        -:   61:void
function leave called 1 returned 0% blocks executed 67%
        1:   62:leave (int i)
        -:   63:{
        1:   64:  if (i == 0) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   65:      abort ();
call    0 never executed
        -:   66:    }
        1:   67:  exit (0);
        -:   68:}
        -:   69:
        -:   70:int
function main called 1 returned 0% blocks executed 78%
        1:   71:main()
        -:   72:{
        -:   73:  int retval;
        -:   74:
        -:   75:					/* branch(33) */
        1:   76:  if ((retval = setjmp (env))) {
call    0 returned 300%
branch  1 taken 67% (fallthrough)
branch  2 taken 33%
        -:   77:					/* branch(end) */
        2:   78:      val += retval;			/* count(2) */
        -:   79:    }
        -:   80:					/* returns(33) */
        3:   81:  foo (val);				/* count(3) */
call    0 returned 33%
        -:   82:					/* returns(0) */
        1:   83:  leave (passed());			/* count(1) */
call    0 returned 100%
call    1 returned 0%
        -:   84:					/* returns(end) */
        -:   85:}
        -:   86:
        -:   87:/* { dg-final { run-gcov calls branches { -b gcov-7.c } } } */
